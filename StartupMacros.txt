var pp;

macro "Make Text"{
	s=getNumber("Gaussian blur sigma",15)
	run("Duplicate...", "title=dupli");
	setRGBWeights(1,0,0);
	run("8-bit");
	saveAs("Text Image", "C:/raw.txt");
	run("Duplicate...", "title=duplii");
	run("Gaussian Blur...", "sigma=s");
	saveAs("Text Image", "F:/blur.txt");
}

macro "Open Threshold"{
	setOption("ScaleConversions", true);
	run("16-bit");
	run("Enhance Contrast...", "saturated=0.1");}

macro "Stump Fit Action Tool - CD30T1b09ST7b09TTdb09U"{
	Roi.getSplineAnchors(xx,yy)
	Fit.doFit("Straight Line",xx,yy)
	a=(Fit.p(0))
	b=(Fit.p(1))
	pp=newArray(a,b)
}

macro "Get Sr Action Tool - C05BT1b12STaf07R"{
	Roi.getContainedPoints(xx,yy);
	Roi.getCoordinates(zz,tt);
	for(i=0;i<xx.length;i++){
		if(round(yy[i])==round(pp[0]+pp[1]*xx[i])){
			print(i);
			zz=Array.concat(xx[i],zz);
			tt=Array.concat(yy[i],tt);
		};
	};
	for(i=zz.length-1;i>-1;i--){
		if(round(tt[i])>round(pp[0]+pp[1]*zz[i])){
			zz=Array.deleteIndex(zz,i);
			tt=Array.deleteIndex(tt,i);
		};
	};
	makeLine(zz[0],tt[0],zz[1],tt[1]);
	roiManager("add");
	makeSelection("polygon",zz,tt);
	roiManager("add");
}

macro "Get Sm Action Tool - C05BT1b12STaf07M"{
setRGBWeights(1,0,0);
getHistogram(0,hh,256);
M=0;Tp=0;
for(i=0;i<256;i++){
	if(hh[i]>hh[M]){
		M=i;}
};
print("M =",M);a=M+1;
Sh=newArray(a);Shh=newArray(a);Sg=newArray(a);Sgg=newArray(a);Sgh=newArray(a);
Sh[0]=hh[0];Shh[0]=hh[0]*hh[0];Sg[0]=1;Sgg[0]=1;Sgh[0]=hh[0]*1;
for(i=1;i<a;i++){
	g=i;
	Sh[i]=Sh[i-1]+hh[g];
	Shh[i]=Shh[i-1]+hh[g]*hh[g];
	Sg[i]=Sg[i-1]+g+1;
	Sgg[i]=Sgg[i-1]+(g+1)*(g+1);
	Sgh[i]=Sgh[i-1]+(g+1)*hh[i];
};
e1=newArray(a);e2=newArray(a);
for(i=0;i<a-1;i++){
	nu=a*Sgh[i]-Sg[i]*Sh[i];
	de=a*Sgg[i]-Sg[i]*Sg[i];
	e1[i]=Shh[i]-Sh[i]/a-nu*nu/a/de;
};
for(i=0;i<a-1;i++){
	he=Sh[a-1]-Sh[i];
	hhe=Shh[a-1]-Shh[i];
	ge=Sg[a-1]-Sg[i];
	gge=Sgg[a-1]-Sgg[i];
	ghe=Sgh[a-1]-Sgh[i];
	nu=a*ghe-ge*he;
	de=a*gge-ge*ge;
	e2[i]=hhe-he/a-nu*nu/a/de;
};
for(i=0;i<a;i++){
	if(e1[i]+e2[i]<e1[Tp]+e2[Tp]){
		Tp=i;
	}
};
print("T-point =",Tp);
b=hh[M]-hh[0];
D=0;
for(i=M-1;i>0;i--){
	y=1/hh[0];
	x=(1-hh[M]*y)/M;
	d=abs(hh[i]*y+i*x-1) / sqrt(x*x + y*y);
	if(d>D){
		D=d;
		Tt=i;
	}
};
print("D =",D);
print("T triangle =",Tt);
}